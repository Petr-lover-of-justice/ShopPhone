{"version":3,"file":"static/js/FullPhone.934472e0.chunk.js","mappings":"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","sources":["redux/fullPhone/selectors.ts","webpack://smart/./src/components/FullProperty/FullProperty.module.scss?59c6","components/FullProperty/index.tsx","pages/FullPhone.tsx"],"sourcesContent":["import { RootState } from '../store';\r\n\r\nexport const selectFullPhone = (state: RootState) => state.fullPhone;\r\nexport const selectSort = (state: RootState) => state.filter.sort;","// extracted by mini-css-extract-plugin\nexport default {\"product\":\"FullProperty_product__ule3O\",\"productMemeres\":\"FullProperty_productMemeres__Hu+Op\",\"productPhoto\":\"FullProperty_productPhoto__mc+Xc\",\"productSpecifications\":\"FullProperty_productSpecifications__YB8ac\",\"productProperty\":\"FullProperty_productProperty__3vWuz\",\"productPropertyText\":\"FullProperty_productPropertyText__ysOk0\",\"productPropertyParameter\":\"FullProperty_productPropertyParameter__07YYv\",\"productPropertyList\":\"FullProperty_productPropertyList__q6FTn\",\"productPropertyListul\":\"FullProperty_productPropertyListul__4j612\",\"productPropertyValue\":\"FullProperty_productPropertyValue__mv0nM\",\"navigateBtn\":\"FullProperty_navigateBtn__2JTPW\",\"navigateBtnBack\":\"FullProperty_navigateBtnBack__G4Zaq\",\"color\":\"FullProperty_color__hMglG\",\"colorBlack\":\"FullProperty_colorBlack__Dy-+G\",\"colorWhile\":\"FullProperty_colorWhile__yujoa\",\"colorCoral\":\"FullProperty_colorCoral__6HMNJ\",\"active\":\"FullProperty_active__Su57S\"};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport s from './FullProperty.module.scss'\r\nimport { typeNames } from '../phoneBlock';\r\nimport { addItem } from '../../redux/cart/slice';\r\n;\r\nconst colorType = ['чёрный', 'белый', 'коралловый']\r\n//the server is under development\r\nconst property = [\r\n  { parameter: \"Экран\", parameterValue: \"6.67/1080x2400 Пикс\" },\r\n  { parameter: \"Процессор\", parameterValue: \"Qualcomm Snapdragon 870 3.2 ГГц\" },\r\n  { parameter: \"Оперативная память \", parameterValue: \"8 ГБ\" },\r\n  { parameter: \"Встроенная память (ROM)\", parameterValue: \"Встроенная память (ROM)\" },\r\n  { parameter: \"Основная камера МПикс\", parameterValue: \"48/8/5\" },\r\n  { parameter: \"Фронтальная камера МПикс\", parameterValue: \"20\" },\r\n  { parameter: \"Технология NFC\", parameterValue: \"Да\" },\r\n]\r\nconst ColorKinds = [\"colorBlack\", \"colorWhile\", \"colorCoral\"]\r\n\r\n\r\ntype fullPhoneProps = {\r\n  id: string\r\n  title: string;\r\n  price: number;\r\n  imageUrl: string;\r\n  sizes: number[];\r\n  types: number[];\r\n}\r\ntype CartItem = {\r\n  id: string;\r\n  title: string;\r\n  price: number;\r\n  imageUrl: string;\r\n  type: string;\r\n  size: number;\r\n  count: number;\r\n};\r\nexport const FullProperty: React.FC<fullPhoneProps> = ({ id, title, price, imageUrl, sizes, types }) => {\r\n  const dispatch = useDispatch();\r\n  const [color, setColor] = React.useState(0)\r\n  const [choiceMemory, setChoiceMemory] = React.useState(1)\r\n  const clickColor = (str: number) => { setColor(str) }\r\n\r\n  const ClickPay = () => {\r\n    const item: CartItem = {\r\n      id,\r\n      title,\r\n      price,\r\n      imageUrl,\r\n      type: typeNames[choiceMemory],\r\n      size: sizes[color],\r\n      count: 0,\r\n    };\r\n    dispatch(addItem(item));\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div className={s.product}>\r\n        <img className={s.productPhoto} src={imageUrl} />\r\n        <div className={s.productSpecifications}>\r\n          <h2>{title}</h2>\r\n          <h4>{price} ₽</h4>\r\n          <li className={s.productMemeres}>{typeNames.map((items, i) => <li key={items} className={`${choiceMemory === i ? s.active : \"\"}`} onClick={() => setChoiceMemory(i)}>{items}</li>)}</li>\r\n          <p>Цвет: {colorType[color]}</p>\r\n          <div className=\"color\">\r\n            {ColorKinds.map((items, i) => <li key={i} onClick={() => clickColor(i)} className={`${items} ${color === i ? `active` : `\"\"`}`}></li>)}\r\n          </div>\r\n          <div className={s.productProperty}>\r\n            {property.map((arr: any, i: number) => <li key={i} className={s.productPropertyList}>\r\n              <ul className={s.productPropertyParameter}>{arr.parameter}</ul>\r\n              <ul className={s.productPropertyValue}>{arr.parameterValue}</ul>\r\n            </li>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.navigateBtn}>\r\n        <Link to=\"/\">\r\n          <button className={s.navigateBtnBack}>\r\n            <span>Назад</span>\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/cart\">\r\n          <button className=\"button button--outline button--add\" onClick={ClickPay}>\r\n            <span>купить</span>\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectFullPhone } from '../redux/fullPhone/selectors';\r\nimport { fetchFullPhone } from '../redux/fullPhone/asyncActionsFull';\r\nimport { FullProperty } from '../components/FullProperty';\r\nimport { addItem } from '../redux/cart/slice';\r\n\r\n\r\nconst FullPhone: React.FC = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    const getPhone = async () => {\r\n      dispatch(fetchFullPhone(id))\r\n    }\r\n    getPhone()\r\n  }, [])\r\n  const { items } = useSelector(selectFullPhone)\r\n\r\nconst y=(items)\r\n\r\n\r\n  const phone = items.map((item) => (\r\n    <div key={item.id}><FullProperty key={item.id} {...item} /></div>\r\n  ))\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {phone}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPhone;\r\n"],"names":["selectFullPhone","state","fullPhone","colorType","property","parameter","parameterValue","ColorKinds","FullProperty","id","title","price","imageUrl","sizes","dispatch","types","useDispatch","React","color","setColor","choiceMemory","setChoiceMemory","className","s","src","typeNames","items","i","onClick","map","arr","to","item","type","size","count","addItem","useParams","getPhone","fetchFullPhone","useSelector","phone"],"sourceRoot":""}